import { Banner } from '@/components/Banner';
import { SlidesConteiner } from '@/components/Slides';
import { TravelsTypes } from '@/components/TravelsType';
import { getPrismicClient } from '@/services/prismic';
import { GetStaticProps } from 'next';
import Head from 'next/head';
import { Header } from "../components/Header";
import { useEffect } from 'react';
import { useContinents } from '@/contexts/continentsContexts';

interface CountryProps {
    uid: string;
    slug: string
    title: string;
    subtitle: string;
    description: string;
    amount_of_countries: string;
    amount_of_languages: string;
    amount_of_cities: string;
    image_home: string;
    image_page: string;
}

interface HomeProps {
    continentsAll: CountryProps[];

}
export default function Home({ continentsAll }: HomeProps) {
    const { setContinents } = useContinents();
    useEffect(() => {
        if (continentsAll) {
            setContinents(continentsAll)
        }
    }, [continentsAll, setContinents])
    return (
        <>
            <Head>
                <title>WORLD TRIP | HOME</title>
                <meta name="description" content="Generated by create next app" />
                <meta name="viewport" content="width=device-width, initial-scale=1" />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <main >
                <Header />
                <Banner />
                <TravelsTypes />
                <SlidesConteiner />
            </main>
        </>
    )
}


export const getStaticProps: GetStaticProps = async ({ }) => {
    const prismic = getPrismicClient({})
    const continents = await prismic.getAllByType("continent", {
        orderings: {
            field: 'document.first_publication_date',
            direction: 'asc',
        }
    });

    const continentsFormart = continents.map((continent) => {
        return {
            uid: continent.uid,
            slug: continent.uid,
            title: continent.data.title[0].text,
            subtitle: continent.data.subtitle[0].text,
            description: continent.data.description[0].text,
            amount_of_countries: continent.data.amount_of_countries,
            amount_of_languages: continent.data.amount_of_languages,
            amount_of_cities: continent.data.amount_of_cities,
            image_home: continent.data?.["image-home"].url,
            image_page: continent.data?.["image-page"].url
        }
    });

    return {
        props: { continentsAll: continentsFormart },
        revalidate: 60 * 60 * 24 // 24 Horas
    }
}